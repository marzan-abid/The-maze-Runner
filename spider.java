
import java.util.Random;


public class spider {
    
    public int maze1[][]
            = {{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {0, 0, 1, 0, 2, 0, 1, 0, 1, 1, 1, 2, 0, 0, 0, 1, 0, 0, 0, 1, 2, 1, 1, 1, 0, 1},
            {1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 2, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1},
            {1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 6},
            {1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 2, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1},
            {1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1},
            {1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 2, 0, 0, 1},
            {1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1},
            {1, 0, 0, 0, 1, 1, 1, 0, 0, 2, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1},
            {1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1},
            {1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1},
            {1, 0, 0, 0, 1, 2, 1, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 1, 2, 1, 0, 0, 2, 0, 0, 1},
            {1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1},
            {1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1},
            {1, 0, 1, 0, 1, 1, 1, 2, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1},
            {1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 2, 0, 0, 2, 0, 0, 1, 1, 1},
            {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1},
            {1, 0, 1, 0, 1, 0, 1, 2, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1},
            {1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 2, 0, 0, 0, 0, 1},
            {1, 0, 2, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 2, 1, 0, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}
            };
    
    
    public int maze2[][] = 
       { {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,6,1,1,1,1},
          {0,0,1,0,1,2,1,2,0,0,0,0,1,1,0,1,0,1,0,1,0,0,0,0,0,1},
          {1,0,1,0,0,0,1,0,1,1,1,0,0,0,0,1,0,0,0,1,0,1,1,1,0,1},
          {1,0,0,0,1,1,1,0,2,0,0,0,1,0,2,0,0,1,1,1,0,0,0,0,0,1},
          {1,0,1,0,1,0,0,0,1,1,1,0,1,1,0,1,0,0,2,0,0,1,1,1,0,5},
          {1,0,1,0,1,0,1,0,1,0,0,2,1,1,0,1,0,1,1,1,1,1,0,0,0,1},
          {1,0,1,0,1,0,0,0,1,0,1,0,1,0,0,1,0,1,0,0,0,1,0,1,0,1},
          {1,2,1,0,1,0,1,1,1,0,1,0,0,1,2,1,0,1,1,1,0,1,0,1,0,1},
          {1,0,0,0,2,0,0,2,0,0,1,1,0,1,0,0,0,2,0,0,0,0,0,1,1,1},
          {1,0,1,0,1,0,1,0,0,0,0,0,1,0,0,1,0,1,0,1,0,0,0,0,0,1},
          {1,0,1,0,0,0,1,0,1,1,1,0,1,1,0,1,0,0,0,1,0,1,1,1,0,1},
          {1,0,0,0,1,1,1,0,1,0,0,0,0,1,0,0,0,1,1,1,0,0,0,0,0,1},
          {1,0,1,0,0,0,0,0,1,2,1,0,0,1,0,1,0,0,0,0,1,1,1,1,0,1},
          {1,0,1,0,1,1,1,0,1,0,0,0,1,1,1,1,0,1,1,1,0,0,0,0,0,1},
          {1,0,1,0,1,0,0,0,1,0,1,0,0,0,0,1,2,1,0,0,0,1,1,1,0,1},
          {1,0,1,0,1,0,1,0,1,2,1,0,1,1,0,1,0,1,1,1,0,1,0,1,0,1},
          {1,0,0,2,0,0,2,0,0,0,1,1,0,1,0,0,0,2,0,0,0,2,0,1,1,1},
          {1,1,1,1,1,0,1,1,1,0,1,1,0,1,0,1,0,1,1,1,0,0,0,0,0,1},
          {1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,1,1,1,0,0,1},
          {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}
        };
    
    
    
    private int spiPosx,spiPosy, flag;
    Random rand= new Random();
    
    spider(int spiPosx, int spiPosy,int flag){
        this.spiPosx=spiPosx;
        this.spiPosy=spiPosy;
        this.flag = flag ;
    }
    
    public void spiderPosition(){
            
        
            int x,y;
       
            x= rand.nextInt();
            y= x%4;
            //System.out.println("Spder Position "+x);
            
            if(flag==1){
            
                if(y == 0 && maze1[spiPosx+1][spiPosy] ==0){  //&& maze[spiPosx][spiPosy+1]==0
                    spiPosx++;


                }

                else if( y == 1 && maze1[spiPosx-1][spiPosy] ==0 ){  //&& maze[spiPosx][spiPosy-1] == 0
                    spiPosx--;

                }

                else if( y == 2 && maze1[spiPosx][spiPosy+1] ==0 ){   // && maze[spiPosx+1][spiPosy]==0
                    spiPosy++;
                    //spiFlag=1;

                }
                else if( y == 3 && maze1[spiPosx][spiPosy-1] ==0 ){  //&& maze[spiPosx-1][spiPosy]==0
                    spiPosy--;
                    //spiFlag=1;

                }
            }
            
            
            if(flag==2){
            
                if(y == 0 && maze2[spiPosx+1][spiPosy] ==0){  //&& maze[spiPosx][spiPosy+1]==0
                    spiPosx++;


                }

                else if( y == 1 && maze2[spiPosx-1][spiPosy] ==0 ){  //&& maze[spiPosx][spiPosy-1] == 0
                    spiPosx--;

                }

                else if( y == 2 && maze2[spiPosx][spiPosy+1] ==0 ){   // && maze[spiPosx+1][spiPosy]==0
                    spiPosy++;
                    //spiFlag=1;

                }
                else if( y == 3 && maze2[spiPosx][spiPosy-1] ==0 ){  //&& maze[spiPosx-1][spiPosy]==0
                    spiPosy--;
                    //spiFlag=1;

                }
            }
                   
        
    }
    
    
    public int getxPos(){
        spiderPosition();
        return spiPosx;
    }
    
    public int getyPos(){
        spiderPosition();
        return spiPosy;
    }
    
}
